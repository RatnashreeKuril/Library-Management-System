openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
paths:
  /user/update:
    post:
      tags:
        - user-service
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserBean'
  /user/delete:
    post:
      tags:
        - user-service
      operationId: delete
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /user/add:
    post:
      tags:
        - user-service
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserBean'
  /libraryBranch/update:
    post:
      tags:
        - library-branch-service
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryBranchBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LibraryBranchBean'
  /libraryBranch/delete:
    post:
      tags:
        - library-branch-service
      operationId: delete_1
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /libraryBranch/add:
    post:
      tags:
        - library-branch-service
      operationId: add_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryBranchBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LibraryBranchBean'
  /fine/pay:
    post:
      tags:
        - fine-service
      operationId: payFine
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Fine'
  /fine/delete:
    post:
      tags:
        - fine-service
      operationId: delete_2
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /borrowingRecord/returnBook:
    post:
      tags:
        - borrowing-record-service
      operationId: returnBook
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: returnDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BorrowingRecord'
  /borrowingRecord/delete:
    post:
      tags:
        - borrowing-record-service
      operationId: delete_3
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /borrowingRecord/borrowBook:
    post:
      tags:
        - borrowing-record-service
      operationId: borrowBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowingRecordBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BorrowingRecordBean'
  /borrowingRecord/add:
    post:
      tags:
        - borrowing-record-service
      operationId: add_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowingRecordBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BorrowingRecordBean'
  /book/update:
    post:
      tags:
        - book-service
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookBean'
  /book/delete:
    post:
      tags:
        - book-service
      operationId: delete_4
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /book/add:
    post:
      tags:
        - book-service
      operationId: add_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookBean'
  /author/update:
    post:
      tags:
        - author-service
      operationId: update_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorBean'
  /author/delete:
    post:
      tags:
        - author-service
      operationId: delete_5
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /author/add:
    post:
      tags:
        - author-service
      operationId: add_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorBean'
  /auth/register:
    post:
      tags:
        - authentication-service
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBean'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserBean'
  /auth/login:
    post:
      tags:
        - authentication-service
      operationId: login
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtAuthenticationResponse'
  /user/getByUsername:
    get:
      tags:
        - user-service
      operationId: getByUsername
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /user/getById:
    get:
      tags:
        - user-service
      operationId: getById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /user/getByEmail:
    get:
      tags:
        - user-service
      operationId: getByEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /user/getAll:
    get:
      tags:
        - user-service
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/exists:
    get:
      tags:
        - user-service
      operationId: exists
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /user/count:
    get:
      tags:
        - user-service
      operationId: getCount
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /libraryBranch/getById:
    get:
      tags:
        - library-branch-service
      operationId: getById_1
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LibraryBranch'
  /libraryBranch/getAll:
    get:
      tags:
        - library-branch-service
      operationId: getAll_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LibraryBranch'
  /libraryBranch/exists:
    get:
      tags:
        - library-branch-service
      operationId: exists_1
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /libraryBranch/count:
    get:
      tags:
        - library-branch-service
      operationId: getCount_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /fine/getById:
    get:
      tags:
        - fine-service
      operationId: getById_2
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Fine'
  /fine/getByBorrowingRecord:
    get:
      tags:
        - fine-service
      operationId: getByBorrowingRecord
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Fine'
  /fine/getAll:
    get:
      tags:
        - fine-service
      operationId: getAll_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fine'
  /fine/exists:
    get:
      tags:
        - fine-service
      operationId: exists_2
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /fine/count:
    get:
      tags:
        - fine-service
      operationId: getCount_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /borrowingRecord/getById:
    get:
      tags:
        - borrowing-record-service
      operationId: getById_3
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BorrowingRecord'
  /borrowingRecord/getAll:
    get:
      tags:
        - borrowing-record-service
      operationId: getAll_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BorrowingRecord'
  /borrowingRecord/exists:
    get:
      tags:
        - borrowing-record-service
      operationId: exists_3
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /borrowingRecord/count:
    get:
      tags:
        - borrowing-record-service
      operationId: getCount_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /book/getById:
    get:
      tags:
        - book-service
      operationId: getById_4
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Book'
  /book/getAll:
    get:
      tags:
        - book-service
      operationId: getAll_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /book/exists:
    get:
      tags:
        - book-service
      operationId: exists_4
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /book/count:
    get:
      tags:
        - book-service
      operationId: getCount_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /author/getById:
    get:
      tags:
        - author-service
      operationId: getById_5
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Author'
  /author/getAll:
    get:
      tags:
        - author-service
      operationId: getAll_5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
  /author/exists:
    get:
      tags:
        - author-service
      operationId: exists_5
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /author/count:
    get:
      tags:
        - author-service
      operationId: getCount_5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /analytics/overdueBooks:
    get:
      tags:
        - analytics-service
      operationId: overdueBooks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /analytics/mostBorrowedBooks:
    get:
      tags:
        - analytics-service
      operationId: mostBorrowedBooks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: object
  /analytics/activeUsers:
    get:
      tags:
        - analytics-service
      operationId: activeUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
components:
  schemas:
    UserBean:
      required:
        - email
        - firstName
        - isActive
        - isStaff
        - lastName
        - membershipType
        - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        isStaff:
          type: boolean
        isActive:
          type: boolean
        membershipType:
          type: string
    LibraryBranchBean:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        location:
          type: string
        contactInfo:
          type: string
    Author:
      required:
        - dateOfBirth
        - firstName
        - lastName
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        biography:
          type: string
    Book:
      required:
        - author
        - isbn
        - libraryBranch
        - publishedDate
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        isbn:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        publishedDate:
          type: string
          format: date-time
        availableCopies:
          type: integer
          format: int32
        libraryBranch:
          $ref: '#/components/schemas/LibraryBranch'
    BorrowingRecord:
      required:
        - book
        - user
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
        book:
          $ref: '#/components/schemas/Book'
        borrowDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        returnDate:
          type: string
          format: date-time
        status:
          type: string
    Fine:
      type: object
      properties:
        id:
          type: integer
          format: int64
        borrowingRecord:
          $ref: '#/components/schemas/BorrowingRecord'
        amount:
          type: number
        issuedDate:
          type: string
          format: date-time
        status:
          type: string
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    LibraryBranch:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        location:
          type: string
        contactInfo:
          type: string
    User:
      required:
        - email
        - firstName
        - lastName
        - membershipType
        - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        isStaff:
          type: boolean
        isActive:
          type: boolean
        membershipType:
          type: string
        enabled:
          type: boolean
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        password:
          type: string
        accountNonLocked:
          type: boolean
        accountNonExpired:
          type: boolean
        credentialsNonExpired:
          type: boolean
    BorrowingRecordBean:
      required:
        - bookId
        - borrowDate
        - userId
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        userId:
          minimum: 1
          type: integer
          format: int64
        bookId:
          minimum: 1
          type: integer
          format: int64
        borrowDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        returnDate:
          type: string
          format: date-time
        status:
          type: string
        fine:
          $ref: '#/components/schemas/Fine'
    BookBean:
      required:
        - authorId
        - isbn
        - libraryBranchId
        - publishedDate
        - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        isbn:
          type: string
        authorId:
          minimum: 1
          type: integer
          format: int64
        publishedDate:
          type: string
          format: date-time
        availableCopies:
          type: integer
          format: int32
        libraryBranchId:
          minimum: 1
          type: integer
          format: int64
    AuthorBean:
      required:
        - dateOfBirth
        - firstName
        - lastName
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        biography:
          type: string
    JwtAuthenticationResponse:
      type: object
      properties:
        token:
          type: string
        refreshToken:
          type: string
